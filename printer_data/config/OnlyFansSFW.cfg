
[fan_generic BedFans]
pin = gpio17
max_power = 1.0

[virtual_pins]

[output_pin fan_factor]
pin = virtual_pin:fan_factor
pwm = True
value = 1
shutdown_value = 1

[output_pin accel_factor]
pin = virtual_pin:accel_factor
pwm = True
value = 1.0

[gcode_macro M106]
rename_existing = M106.1
gcode = 
	{% set S = params.S|default(0)|int %}
	{% set P = params.P|default(0)|int %}
	{% set FACTOR = printer['output_pin fan_factor'].value %}
	{% set ADJUSTED_S = (S * FACTOR)|round(0)|int %}
	{% set CAPPED_S = [ADJUSTED_S, 255]|min %}
	M106.1 P{P} S{CAPPED_S}

[gcode_macro SET_VELOCITY_LIMIT]
rename_existing = SET_VELOCITY_LIMIT_ORIG
gcode = 
	{% set accel = params.ACCEL|default(None) %}
	{% set accel_to_decel = params.ACCEL_TO_DECEL|default(None) %}
	{% set velocity = params.VELOCITY|default(None) %}
	{% set factor = printer['output_pin accel_factor'].value %}
	
	{% if accel is not none %}
	{% set adjusted_accel = accel|float * factor %}
	{% else %}
	{% set adjusted_accel = None %}
	{% endif %}
	
	{% if accel_to_decel is not none %}
	{% set adjusted_accel_to_decel = accel_to_decel|float * factor %}
	{% else %}
	{% set adjusted_accel_to_decel = None %}
	{% endif %}
	
	SET_VELOCITY_LIMIT_ORIG
	{% if velocity is not none %}
	VELOCITY={velocity|float}
	{% endif %}
	{% if adjusted_accel is not none %}
	ACCEL={adjusted_accel|float}
	{% endif %}
	{% if adjusted_accel_to_decel is not none %}
	ACCEL_TO_DECEL={adjusted_accel_to_decel|float}
	{% endif %}

[gcode_macro _BEDFANVARS]
variable_threshold = 90
variable_fanthreshold = 50
variable_slowthreshold = 75
variable_fast = 0.80
variable_slow = 0.25
variable_offthreshold = 45
gcode = 

[gcode_macro BEDFANSSLOW]
gcode = 
	{% set SLOW = printer["gcode_macro _BEDFANVARS"].slow|float %}
	SET_FAN_SPEED FAN=BedFans SPEED={SLOW}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=SLOW) %}

[gcode_macro BEDFANSFAST]
gcode = 
	{% set FAST = printer["gcode_macro _BEDFANVARS"].fast|float %}
	SET_FAN_SPEED FAN=BedFans SPEED={FAST}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=FAST) %}

[gcode_macro BEDFANSOFF]
gcode = 
	SET_FAN_SPEED FAN=BedFans SPEED=0
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=0) %}

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing = _SET_HEATER_TEMPERATURE
gcode = 
	
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	{% set SLOWTHRESHOLD = printer["gcode_macro _BEDFANVARS"].slowthreshold|int %}
	{% set FANTHRESHOLD = printer["gcode_macro _BEDFANVARS"].fanthreshold|int %}
	
	{% if HEATER|lower == "extruder" %}
	M104 S{TARGET}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(hotend_temp=S) %}
	{% elif HEATER|lower == "heater_bed" %}
	M99140 S{TARGET}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_temp=S) %}
	{% else %}
	{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}
	
	
	{% if HEATER|lower == "heater_bed" %}
	{% if TARGET >= THRESHOLD %}
	BEDFANSSLOW
	UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
	{% elif TARGET >= SLOWTHRESHOLD %}
	BEDFANSSLOW
	{% elif TARGET >= FANTHRESHOLD %}
	RESPOND TYPE=echo MSG='Target is {TARGET}, bedfans left off'
	{% else %}
	TURN_OFF_HEATERS
	{% endif %}
	{% endif %}

[gcode_macro M190]
rename_existing = M99190
gcode = 
	
	{% set S = params.S|int %}
	
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	
	{% if S >= THRESHOLD %}
	BEDFANSSLOW
	{% else %}
	TURN_OFF_HEATERS
	{% endif %}
	
	M140 {% for p in params
	%}{'%s%s' % (p, params[p])}{%
	endfor %}
	
	{% if S != 0 %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}
	bed_temp
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_temp=S) %}
	{% endif %}
	
	
	{% if S >= THRESHOLD %}
	BEDFANSFAST
	{% endif %}

[gcode_macro M140]
rename_existing = M99140
gcode = 
	
	{% set S = params.S|float %}
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_temp=S) %}

[gcode_macro TURN_OFF_HEATERS]
rename_existing = _TURN_OFF_HEATERS
gcode = 
	_TURN_OFF_HEATERS
	{% if printer.heater_bed.temperature|int >= printer["gcode_macro _BEDFANVARS"].offthreshold %}
		UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=300
	{% endif %}

[delayed_gcode bedfanloop]
gcode = 
	
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	{% set COOLDOWN = printer["gcode_macro _BEDFANVARS"].offthreshold %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			BEDFANSFAST
		{% else %}
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5
		{% endif %}

	{% elif printer.heater_bed.target == 0 %}
		{% if printer.heater_bed.temperature|int >= COOLDOWN %}
			BEDFANSSLOW
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=300
		{% else %}
			BEDFANSOFF
		{% endif %}
		
	{% endif %}

[gcode_macro CHAMBER_MANAGER]
variable_bed_temp = 0
variable_hotend_temp = 0
variable_chamber_temp = 0
variable_target_chamber_temp = 0
variable_exhaust_fan_speed = 0
variable_bed_fan_speed = 0
variable_surface_temp_delta = 1.1
variable_heatsoak_duration = 900000
variable_bed_fan_min = 0.25
variable_bed_fan_max = 1.0
variable_exhaust_fan_min = 0.25
variable_exhaust_fan_max = 1.0
gcode = 

[gcode_macro M141]
description = This is how gcode for chamber temp are managed by the slicer.
gcode = 
	{% set S = params.S|default(0)|int %}
	{% set CURRENT_CHAMBER_TEMP = printer["temperature_sensor chamber"].temperature %}
	{% set BED_TEMP = printer.heater_bed.temperature|int %}
	{% set HOTEND_TEMP = printer.extruder.temperature|int %}
	
	{% if printer.toolhead.homed_axes != "xyz" %}
		G28
	{% endif %}
	
	{% if S == 0 %}
		SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
		SET_FAN_SPEED FAN=BedFans SPEED=0.2
		RESPOND TYPE=echo MSG="Bedfans to run for 5min then turn off."
		G4 P300000
		SET_FAN_SPEED FAN=BedFans SPEED=0
	
	{% else %}
		{% if CURRENT_CHAMBER_TEMP <= 40 %}
	
			{% if BED_TEMP < 110 %}
				SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
				{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_temp=110) %}
				{% if HOTEND_TEMP < 150 %}
					SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
					{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(hotend_temp=150) %}
				{% endif %}
			M106 S204
			{% endif %}
		SET_FAN_SPEED FAN=BedFans SPEED=0.8
		{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=0.8) %}
		
		
		RESPOND TYPE=echo MSG="Wait for chamber to reach {S}C."
		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={S}
		{% else %}
			RESPOND TYPE=echo MSG="Chamber is pre-heated. Skipping heatsoak timer."
			
			SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
			SET_FAN_SPEED FAN=BedFans SPEED=0.40
			
			RESPOND TYPE=echo MSG="Chamber is Waiting for chamber to reach {S}C."
			TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={S}
			RESPOND TYPE=echo MSG="Heatsoaking for 5min"
			G4 P300000
		{% endif %}
		RESPOND TYPE=echo MSG="Setting bed fans to 20%."
		SET_FAN_SPEED FAN=BedFans SPEED=0.20
	{% endif %}
	CHAMBER_TEMP_MANAGER

[gcode_macro M191]
description = This is how gcode for chamber temp are managed by the slicer.
gcode = 
	{% set S = params.S|default(0)|int %}
	{% set CURRENT_CHAMBER_TEMP = printer["temperature_sensor chamber"].temperature %}
	{% set BED_TEMP = printer.heater_bed.temperature|int %}
	{% set HOTEND_TEMP = printer.extruder.temperature|int %}
	
	
	{% if printer.toolhead.homed_axes != "xyz" %}
		G28
	{% endif %}
	g90
	g1 x60 y60 z30 F10000
	
	{% if CURRENT_CHAMBER_TEMP <= 40 %}
		{% if BED_TEMP < 110 %}
			SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
			{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_temp=110) %}
		{% endif %}

		SET_FAN_SPEED FAN=BedFans SPEED=0.8
		{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=0.8) %}
	
	
		{% if HOTEND_TEMP < 150 %}
			SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
			{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(hotend_temp=150) %}
		{% endif %}
		M106 S204
	
		RESPOND TYPE=echo MSG="Chamber is Waiting for chamber to reach {S}C."
		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={S}
		RESPOND TYPE=echo MSG="Heatsoaking for {printer["gcode_macro CHAMBER_MANAGER"].variable_heatsoak_duration} sec."
		G4 P{printer["gcode_macro CHAMBER_MANAGER"].heatsoak_duration}
	{% else %}
		RESPOND TYPE=echo MSG="Chamber is pre-heated. Skipping heatsoak timer."
		
		SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
		SET_FAN_SPEED FAN=BedFans SPEED=0.40
		
		RESPOND TYPE=echo MSG="Chamber is Waiting for chamber to reach {S}C."
		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={S}
		RESPOND TYPE=echo MSG="Heatsoaking for 5min"
		G4 P300000
	{% endif %}
	CHAMBER_TEMP_MANAGER

[gcode_macro CHAMBER_HEATSOAK]
gcode = 
	{% set CHAMBER = printer["gcode_macro CHAMBER_MANAGER"].target_chamber_temp %}
	{% set BED_TEMP = printer["gcode_macro CHAMBER_MANAGER"].bed_temp %}
	{% set CURRENT_CHAMBER_TEMP = printer["temperature_sensor chamber"].temperature %}
	
	RESPOND TYPE=echo MSG="Starting chamber heatsoak. Target: {CHAMBER}C"
	
	M140 S120
	M104 S150
	M106 S204
	
	RESPOND TYPE=echo MSG="Setting BedFans to {printer["gcode_macro CHAMBER_MANAGER"].bed_fan_min}."
	SET_FAN_SPEED FAN=BedFans SPEED={printer["gcode_macro CHAMBER_MANAGER"].bed_fan_min}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=printer["gcode_macro CHAMBER_MANAGER"].bed_fan_min) %}
	
	M190 S120
	
	RESPOND TYPE=echo MSG="Setting BedFans to {printer["gcode_macro CHAMBER_MANAGER"].bed_fan_max}."
	SET_FAN_SPEED FAN=BedFans SPEED={printer["gcode_macro CHAMBER_MANAGER"].bed_fan_max}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=printer["gcode_macro CHAMBER_MANAGER"].bed_fan_max) %}
	
	{% if CURRENT_CHAMBER_TEMP <= 40 %}
		RESPOND TYPE=echo MSG="Chamber is cold. Starting 15-minute heatsoak."
		UPDATE_DELAYED_GCODE ID=end_heatsoak DURATION={printer["gcode_macro CHAMBER_MANAGER"].heatsoak_duration}
	{% else %}
		RESPOND TYPE=echo MSG="Chamber is pre-heated. Skipping heatsoak timer."
		CHAMBER_TEMP_MANAGER
	{% endif %}



[delayed_gcode end_heatsoak]
gcode = 
	RESPOND TYPE=echo MSG="Heatsoak complete. Starting temperature management."
	CHAMBER_TEMP_MANAGER



[gcode_macro CHAMBER_TEMP_MANAGER]
gcode = 
	{% set NEW_SPEED = 0 | float %}
	{% set TARGET = printer["gcode_macro CHAMBER_MANAGER"].target_chamber_temp %}
	{% set CURRENT = printer["temperature_sensor chamber"].temperature %}
	{% set BED_FAN_SPEED = printer["gcode_macro CHAMBER_MANAGER"].bed_fan_speed %}
	{% set EXHAUST_FAN_SPEED = printer["gcode_macro CHAMBER_MANAGER"].exhaust_fan_speed %}
	{% set EXHAUST_HYSTERESIS_ON = printer["gcode_macro CHAMBER_MANAGER"].exhaust_hysteresis_on %}
	{% set EXHAUST_HYSTERESIS_OFF = printer["gcode_macro CHAMBER_MANAGER"].exhaust_hysteresis_off %}
	
	
	{% if CURRENT < TARGET - 5 %}
	
		{% if BED_FAN_SPEED < printer["gcode_macro CHAMBER_MANAGER"].bed_fan_max %}
			{% set NEW_SPEED = BED_FAN_SPEED + 0.1 %}
			RESPOND TYPE=echo MSG="Chamber_Temp_Manager setting bedfans to NEW_SPEED {NEW_SPEED}."
			SET_FAN_SPEED FAN=BedFans SPEED={NEW_SPEED}
			{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=NEW_SPEED) %}
		{% endif %}
	
	{% elif CURRENT > TARGET + 5 %}
		{% if BED_FAN_SPEED > printer["gcode_macro CHAMBER_MANAGER"].bed_fan_min %}
			{% set NEW_SPEED = BED_FAN_SPEED - 0.1 %}
			RESPOND TYPE=echo MSG="Chamber_Temp_Manager setting bedfans to NEW_SPEED {NEW_SPEED}."
			SET_FAN_SPEED FAN=BedFans SPEED={NEW_SPEED}
			{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_speed=NEW_SPEED) %}
		{% endif %}

	{% endif %}
	
	UPDATE_DELAYED_GCODE ID=chamber_temp_check DURATION=60



[delayed_gcode chamber_temp_check]
gcode = 
	CHAMBER_TEMP_MANAGER



[gcode_macro CHAMBER_COOLPRINT]
gcode = 
	{% set CHAMBER = printer["temperature_sensor chamber"].temperature %}
	{% set BED_TEMP = printer["gcode_macro CHAMBER_MANAGER"].bed_temp %}
	
	RESPOND TYPE=echo MSG="Preparing for cool printing. Coolprint Current chamber temp: {CHAMBER}C"
		
	SET_FAN_SPEED FAN=BedFans SPEED={printer["gcode_macro CHAMBER_MANAGER"].bed_fan_min}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_fan_min=printer["gcode_macro CHAMBER_MANAGER"].bed_fan_min) %}
		
	M140 S{BED_TEMP}
	M190 S{BED_TEMP}
	{% set _dummy = printer["gcode_macro CHAMBER_MANAGER"].update(bed_temp=BED_TEMP) %}
		
	RESPOND TYPE=echo MSG="Waiting 5 minutes for bed temperature to stabilize."
	G4 P300000
	
	M104 S150
