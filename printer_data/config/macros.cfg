[gcode_macro HOME]
description = "Performs G28 if all axis are not homed."
gcode = 
	{% if printer.toolhead.homed_axes != "xyz" %}
	G28
	{% else %}
	G28 XY
	{% endif %}
	G1 X60 Y120 Z20

[gcode_macro Center]
gcode = 
	{% if printer.toolhead.homed_axes != "xyz" %}
	G28
	{% endif %}
	g90
	g1 x60 y60 F10000

[gcode_macro PRINT_START]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(65)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
	{% set EXTRUDER_STBY = params.EXTRUDER_STBY|default(150)|float %}
	{% set CHAMBER = params.CHAMBER|default(30)|int %}
	{% set SKIRT = params.SKIRT|default(0)|int %}
	
	
	
	SET_GCODE_VARIABLE MACRO=CHAMBER_MANAGER VARIABLE=bed_temp VALUE={BED_TEMP}
	SET_GCODE_VARIABLE MACRO=CHAMBER_MANAGER VARIABLE=target_chamber_temp VALUE={CHAMBER}
	
	
	{% set ADJUSTED_BED_TEMP = (BED_TEMP * printer["gcode_macro CHAMBER_MANAGER"].surface_temp_delta)|round(1) %}
	RESPOND TYPE=echo MSG="Requested bed temp: {BED_TEMP}C, Adjusted bed temp: {ADJUSTED_BED_TEMP}C"
	
	
	
	{% if printer.toolhead.homed_axes != "xyz" %}
	G28
	{% endif %}
	
	
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z30 F3000
	
	
	{% if BED_TEMP > 90 %}
	M191 S{CHAMBER}
	
	{% else %}
	CHAMBER_COOLPRINT
	{% endif %}
	
	
	G0 X1 Y1 F10000
	G0 Z.2 F3000
	
	M117 { "Set Extruder to printing temp..."  }
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-5}
	
	BED_MESH_PROFILE LOAD=default
	
	
	G21
	G90
	M83
	
	
	G92 E0
	
	
	G1 E5 F3600
	{% if SKIRT < 3 %}
	LINE_PURGE
	{% endif %}
	
	M117

[gcode_macro PRINT_END]
gcode = 
	M400
	G92 E0
	G1 E-5 F3600
	G91
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	G0 Z5 F3600
	TURN_OFF_HEATERS
	M107
	G90
	G28 X0 Y0

[gcode_macro SET_PA_ADVANCE]
variable_parameter_pa_target = 0.04
gcode = 
	{% set PA_TARGET = params.PA_TARGET | default(0.04) | float %}
	SET_PRESSURE_ADVANCE ADVANCE={PA_TARGET}

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G90
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	{% for i in range(iterations) %}
	
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28
	
	G90
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro Z_CALIBRATE]
description = Calibrate bed height
gcode = 
	Z_ENDSTOP_CALIBRATE

[gcode_macro Z_CALIBRATE_NUDGE_UP]
description = Calibrate bed height
gcode = 
	TESTZ Z=0.1

[gcode_macro Z_CALIBRATE_NUDGE_DOWN]
description = Calibrate bed height
gcode = 
	TESTZ Z=-0.1

[gcode_macro BED_SCREW_ADJUST]
description = Level out bed BED_SCREW_ADJUST
gcode = 
	BED_SCREWS_ADJUST

[gcode_macro HEAT_SOAK]
description = heats the bed for a while
variable_target_temp = 0
variable_stage = None
variable_check_interval = 10
variable_soak_time_remaining = 0
variable_total_time_elapsed = 0
gcode = 
	{% set TARGET = params.TARGET | default(110) | float %}
	{% set DURATION = (params.DURATION | default(60) | int) * 60 %}
	
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }
	
	{% if printer.toolhead.homed_axes != "xyz" %}
	G28
	{% endif %}
	G90
	G0 X55 Y45 Z50
	
	
	UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }

[gcode_macro CANCEL_HEAT_SOAK]
description = cancels an in-progress HEAT_SOAK cycle
gcode = 
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
	UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1

[delayed_gcode heat_soaker]
gcode = 
	{% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}
	
	
	{% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }
	
	{% set stage = heat_soak.stage %}
	{% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
	{% set stage = "soaking" %}
	{% endif %}
	
	{% if stage == "soaking" %}
	
	{% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }
	
	{% if soak_time_remaining == 0 %}
	{% set stage = "done" %}
	{% endif %}
	{% endif %}
	
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"
	
	{% if stage in ("done", "cancel") %}
	
	{% if stage == "cancel" %}
	{% set stage = "done" %}
	
	TURN_OFF_HEATERS
	M107
	
	
	M117 { "soak X ~%.1fm" | format(total_time_elapsed / 60.0) }
	{% else %}
	
	M117 { "soaked %.1fm" | format(total_time_elapsed / 60.0) }
	{% endif %}
	
	
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
	SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0
	
	{% else %}
	
	{% if total_time_elapsed % 90 == 0 %}
	
	{% if stage == "heating" %}
	M117 { "heating - %.1fm elapsed" | format(total_time_elapsed / 60.0) }
	{% elif stage == "soaking" %}
	M117 { "soaking - %.1fm remaining" | format(soak_time_remaining / 60.0) }
	{% endif %}
	{% endif %}
	
	
	UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }
	
	
	G4 P1
	
	{% endif %}

[gcode_macro PID_TUNE_EXTRUDER]
variable_parameter_pid_target = 210
gcode = 
	{% set PID_TARGET = params.PID_TARGET | default(0) | int %}
	PID_CALIBRATE HEATER=extruder TARGET={PID_TARGET}

[gcode_macro PID_TUNE_BED]
variable_parameter_target = 60
gcode = 
	{% set PID_TARGET = params.PID_TARGET | default(0) | int %}
	PID_CALIBRATE HEATER=heater_bed TARGET={PID_TARGET}

[gcode_macro RESONANCE_CALIBRATE]
gcode = 
	SHAPER_CALIBRATE

[gcode_macro M600]
description = Filament Change
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro LOAD_FILAMENT]
gcode = 
	M83
	G1 E30 F300
	G1 E15 F150
	M82

[gcode_macro UNLOAD_FILAMENT]
gcode = 
	M83
	G1 E10 F300
	G1 E-50 F1800
	G1 E-50 F3000
	M82

[gcode_macro STOP_LEDS]
description = "Stop LED Effects."
gcode = 
	STOP_LED_EFFECTS LEDS="neopixel:DisplayStatus"

[gcode_macro M300]
description = "Plays a beep sound.
	@param {int} [S=1000] - Frequency in Hz
	@param {int} [P=100] - Duration in ms
	@param {int} [V=5] - Volume in percent"
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	
	
	{% set V = params.V|default(25)|int %}
	SET_PIN PIN=beeper VALUE={0.1 * (V / 100) if S > 0 else 1} CYCLE_TIME={ 1.0 / S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }

[gcode_macro NOTE]
description = 
	"Plays a specified note for a specified duration
	@param {string} [N=C5] - Note to play
	@param {int} [D=500] - Duration of note. There are currently some Klipper limitations to how short a note can be.
	@param {int} [V=25] - Volume in percent
	@param {bool} [S=true] - Whether or not to stop the note after duration"
gcode = 
	{% set notes = {
	'C0': 16.35,   'CS0': 17.32,   'D0': 18.35,   'DS0': 19.45,   'E0': 20.60,   'F0': 21.83,   'FS0': 23.12,   'G0': 24.50,   'GS0': 25.96,   'A0': 27.50,   'AS0': 29.14,   'B0': 30.87,
	'C1': 32.70,   'CS1': 34.65,   'D1': 36.71,   'DS1': 38.89,   'E1': 41.20,   'F1': 43.65,   'FS1': 46.25,   'G1': 49.00,   'GS1': 51.91,   'A1': 55.00,   'AS1': 58.27,   'B1': 61.74,
	'C2': 65.41,   'CS2': 69.30,   'D2': 73.42,   'DS2': 77.78,   'E2': 82.41,   'F2': 87.31,   'FS2': 92.50,   'G2': 98.00,   'GS2': 103.83,  'A2': 110.00,  'AS2': 116.54,  'B2': 123.47,
	'C3': 130.81,  'CS3': 138.59,  'D3': 146.83,  'DS3': 155.56,  'E3': 164.81,  'F3': 174.61,  'FS3': 185.00,  'G3': 196.00,  'GS3': 207.65,  'A3': 220.00,  'AS3': 233.08,  'B3': 246.94,
	'C4': 261.63,  'CS4': 277.18,  'D4': 293.66,  'DS4': 311.13,  'E4': 329.63,  'F4': 349.23,  'FS4': 369.99,  'G4': 392.00,  'GS4': 415.30,  'A4': 440.00,  'AS4': 466.16,  'B4': 493.88,
	'C5': 523.25,  'CS5': 554.37,  'D5': 587.33,  'DS5': 622.25,  'E5': 659.26,  'F5': 698.46,  'FS5': 739.99,  'G5': 783.99,  'GS5': 830.61,  'A5': 880.00,  'AS5': 932.33,  'B5': 987.77,
	'C6': 1046.50, 'CS6': 1108.73, 'D6': 1174.66, 'DS6': 1244.51, 'E6': 1318.51, 'F6': 1396.91, 'FS6': 1479.98, 'G6': 1567.98, 'GS6': 1661.22, 'A6': 1760.00, 'AS6': 1864.66, 'B6': 1975.53,
	'C7': 2093.00, 'CS7': 2217.46, 'D7': 2349.32, 'DS7': 2489.02, 'E7': 2637.02, 'F7': 2793.83, 'FS7': 2959.96, 'G7': 3135.96, 'GS7': 3322.44, 'A7': 3520.00, 'AS7': 3729.31, 'B7': 3951.07,
	'C8': 4186.01, 'CS8': 4434.92, 'D8': 4698.64, 'DS8': 4978.03, 'E8': 5274.04, 'F8': 5587.65, 'FS8': 5919.91, 'G8': 6271.93, 'GS8': 6644.88, 'A8': 7040.00, 'AS8': 7458.62, 'B8': 7902.13,
	} %}
	
	{% set note = params.N|default('C5')|string %}
	
	{% set dur = params.D|default(500)|int %}
	
	
	{% set volume = params.V|default(25)|int %}
	
	{% set stop = params.S|default('true')|string %}
	
	{% set freq = notes[note] %}
	
	SET_PIN PIN=beeper VALUE={0.1 * (volume / 100) if volume > 0 else 1} CYCLE_TIME={ 1.0 / freq }
	G4 P{dur}
	{% if stop|lower == 'true' %}
	SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }
	{% endif %}

[gcode_macro TONE_GEN]
description = "Used for the tone generator menu"
variable_tone_freq = 0.001093
gcode = 
	M117 {printer["gcode_macro TONE_GEN"].tone_freq}nothz

[gcode_macro SONG_STAR_WARS_MAIN_THEME]
description = "Plays the Star Wars main theme"
gcode = 
	NOTE N=D4 D=133
	NOTE N=D4 D=133
	NOTE N=D4 D=133
	NOTE N=G4 D=1000
	NOTE N=D5 D=1000
	
	NOTE N=C5 D=133
	NOTE N=B4 D=133
	NOTE N=A4 D=133
	NOTE N=G5 D=1000
	NOTE N=D5 D=500
	
	NOTE N=C5 D=133
	NOTE N=B4 D=133
	NOTE N=A4 D=133
	NOTE N=G5 D=1000
	NOTE N=D5 D=500
	
	NOTE N=C5 D=133
	NOTE N=B4 D=133
	NOTE N=C5 D=133
	NOTE N=A4 D=1000
	SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }

[gcode_macro SONG_WELLERMAN_SHANTY]
description = "Plays the Wellerman Shanty"
gcode = 
	NOTE N=G3 D=480 V=15 S=1
	NOTE N=C3 D=480 V=15 S=1
	NOTE N=C3 D=240 V=15 S=1
	NOTE N=C3 D=240 V=15 S=1
	NOTE N=C3 D=480 V=15 S=1
	NOTE N=C3 D=240 V=15 S=1
	NOTE N=DS3 D=240 V=15 S=1
	NOTE N=G3 D=480 V=15 S=1
	NOTE N=G3 D=480 V=15 S=1
	NOTE N=G3 D=480 V=15 S=1
	NOTE N=G3 D=240 V=15 S=1
	NOTE N=G3 D=240 V=15 S=1
	NOTE N=GS3 D=480 V=15 S=1
	NOTE N=F3 D=240 V=15 S=1
	NOTE N=F3 D=240 V=15 S=1
	NOTE N=F3 D=480 V=15 S=1
	NOTE N=GS3 D=480 V=15 S=1
	NOTE N=C4 D=240 V=15 S=1
	NOTE N=C4 D=240 V=15 S=1
	NOTE N=G3 D=480 V=15 S=1
	NOTE N=G3 D=480 V=15 S=1
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }

[gcode_macro SONG_CRAB_RAVE]
description = "Plays Crab Rave"
gcode = 
	NOTE N=D6 D=150 V=30 S=1
	NOTE N=AS6 D=150 V=30 S=1
	NOTE N=G6 D=150 V=30 S=1
	NOTE N=G6 D=150 V=30 S=0
	NOTE N=D6 D=150 V=30 S=1
	NOTE N=D6 D=150 V=30 S=0
	NOTE N=A6 D=150 V=30 S=1
	NOTE N=F6 D=150 V=30 S=1
	NOTE N=F6 D=150 V=30 S=0
	NOTE N=D6 D=150 V=30 S=1
	NOTE N=D6 D=150 V=30 S=0
	NOTE N=A6 D=150 V=30 S=1
	NOTE N=F6 D=150 V=30 S=1
	NOTE N=F6 D=150 V=30 S=0
	NOTE N=C6 D=150 V=30 S=1
	NOTE N=C6 D=150 V=30 S=1
	NOTE N=E6 D=150 V=30 S=1
	NOTE N=E6 D=150 V=30 S=0
	NOTE N=F6 D=150 V=30 S=1
	NOTE N=F6 D=500 V=0 S=1
	SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }

[gcode_macro SONG_NEVER_GONNA_GIVE_YOU_UP]
description = "Never gives you up"
gcode = 
	NOTE N=C6 D=600 V=30 S=1
	NOTE N=D6 D=600 V=30 S=1
	NOTE N=G5 D=400 V=30 S=1
	NOTE N=D6 D=600 V=30 S=1
	NOTE N=E6 D=400 V=30 S=1
	
	
	
	
	
	
	
	
	
	
	
	SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }

[gcode_macro SONG_DARUDE_SANDSTORM]
description = "What's that song?"
gcode = 
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=650 V=30 S=1
	
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=650 V=30 S=1
	
	NOTE N=D4 D=150 V=30 S=1
	NOTE N=D4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=150 V=30 S=1
	NOTE N=A4 D=650 V=30 S=1
	
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=150 V=30 S=1
	NOTE N=G4 D=650 V=30 S=1
	
	NOTE N=D4 D=150 V=30 S=1
	NOTE N=D4 D=150 V=30 S=1
	
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=150 V=30 S=1
	NOTE N=E4 D=650 V=30 S=1
	SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }

[gcode_macro SONG_MARIO_THEME]
gcode = 
	M300 P137 S196
	M300 P138 S262
	M300 P139 S330
	M300 P137 S392
	M300 P138 S523
	M300 P139 S659
	M300 P393 S784
	M300 P393 S659

[homing_override]
axes = xyz
gcode = 
	{% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
	
	{% if home_all or 'X' in params %}
	_HOME_X
	{% endif %}
	
	{% if home_all or 'Y' in params %}
	_HOME_Y
	{% endif %}
	
	{% if home_all or 'Z' in params %}
	G28 Z
	G1 Z-10
	{% endif %}

[gcode_macro _HOME_X]
gcode = 
	
	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
	{% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
	{% set HOME_CURRENT = 0.49 %}
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
	
	
	G28 X
	
	G91
	G1 X-10 F1200
	
	
	G4 P1000
	
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode = 
	
	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
	{% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
	{% set HOME_CURRENT = 0.49 %}
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
	
	
	G28 Y
	
	G91
	G1 Y-10 F1200
	
	
	G4 P1000
	
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}
